{"version":3,"file":"static/js/770.7367261e.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ErrorImageView/ErrorImageView.styled.jsx","components/ErrorImageView/ErrorImageView.jsx","services/getAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 16px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    text-align: center;\n`;\n\nexport const CastItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n\n    width: 180px;\n    max-width: 100%;\n    max-height: 100%;\n\n    border-radius: 8px;\n    border: none;\n    outline: none;\n\n    box-shadow: 9px 7px 19px 7px rgba(42, 79, 42, 0.17);\n  \n    font-size: 12px;\n    font-weight: 700;\n    overflow: hidden;\n`;\n\nexport const CastPhotoThumb = styled.div`\n    position: relative;\n    overflow: hidden;\n`;\n\nexport const CastPhoto = styled.img`\n    display: block;\n    min-height: 100%;\n    height: 240px;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n    transform: scale(1.1);\n    }\n`;\n\nexport const Wrap = styled.div`\n    flex-direction: column;\n    align-items: center;\n    flex: 1 0 auto;\n    padding: 4px;\n    background-color: #eeea9e;\n`;\n\nexport const ActorsName = styled.h3`\n    margin-bottom: 4px;\n    text-align: center;\n    color: #3f51b5;\n    font-size: 16px;\n    font-weight: 700;\n`;\n\nexport const ActorsCharacter = styled.p`\n    margin-bottom: 4px;\n    text-align: center;\n    color: #3f51b5;\n    font-size: 14px;\n    font-weight: 500;\n`;\n\nexport const MovieHero = styled.span`\n    color: #3f51b5;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMoviesCast } from '../../services/getAPI';\nimport Loader from '../Loader/Loader';\nimport ErrorImageView from '../ErrorImageView/ErrorImageView';\nimport NoActor from '../Image/no-actor.png';\nimport { ActorsCharacter, ActorsName, CastItem, CastList, CastPhoto, CastPhotoThumb, MovieHero, Wrap } from './Cast.styled';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [castList, setCastList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n          try {\n            setIsLoading(true);\n            setError(false);\n            const data = await getMoviesCast(movieId);\n            setCastList(data);\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        })();\n      }, [movieId]);\n    \n\n    return (\n        <>\n        {isLoading && <Loader />}\n        {error && <ErrorImageView message=\"Oops, mistake... Please try again\" />}    \n        {castList.length > 0 && (\n        <CastList>\n          {castList.map(actor => (\n              <CastItem key={actor.id}>\n                <CastPhotoThumb>\n                  <CastPhoto\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                        : NoActor\n                    }\n                    alt={actor.name}\n                    width=\"120\"\n                  />\n                </CastPhotoThumb>\n\n                <Wrap>\n                  <ActorsName>{actor.name}</ActorsName>\n                  {actor.character && (\n                    <ActorsCharacter>\n                        <MovieHero>{actor.character}</MovieHero>\n                    </ActorsCharacter>\n                  )}\n                </Wrap>\n              </CastItem>\n          ))}\n        </CastList>\n        )}\n        </>\n    )\n}\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ErrorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  margin: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const Message = styled.p`\n  max-width: 80%;\n  color: #3f51b5;\n  text-shadow: 0 1px 1px #fff;\n  text-align: center;\n  font-size: 48px;\n`;\n\nexport const ErrorImage = styled.img`\n  width: 240px;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import errorImage from '../Image/error.jpg';\nimport {  ErrorBox, ErrorImage, Message } from './ErrorImageView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorImageView({ message }) {\n    return (\n        <ErrorBox role='alert'>\n            <ErrorImage src={errorImage} width='360' alt='laydownandcry' />\n            <Message>{message}</Message>\n        </ErrorBox>\n    );\n};\n\nErrorImageView.propTypes = {\n    message: PropTypes.string,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `58645e23389326a2e8ed75695b9e1b79`,\n\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error(\"We don't have any reviews for this movie\");\n  }\n};\n\nexport const getGenresMovies = async () => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`);\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["CastList","styled","CastItem","CastPhotoThumb","CastPhoto","Wrap","ActorsName","ActorsCharacter","MovieHero","movieId","useParams","useState","castList","setCastList","isLoading","setIsLoading","error","setError","useEffect","getMoviesCast","data","message","Loader","ErrorImageView","length","map","actor","src","profile_path","alt","name","width","character","id","ErrorBox","Message","ErrorImage","role","errorImage","axios","api_key","getTrendingMovies","page","params","Error","getMoviesByQuery","query","include_adult","getMoviesDetailsById","cast","getMoviesReviews","results","getGenresMovies","genres"],"sourceRoot":""}