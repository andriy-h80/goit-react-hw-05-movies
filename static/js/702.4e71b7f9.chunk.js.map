{"version":3,"file":"static/js/702.4e71b7f9.chunk.js","mappings":"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","sources":["components/ErrorImageView/ErrorImageView.styled.jsx","components/ErrorImageView/ErrorImageView.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/getAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  margin: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const Message = styled.p`\n  max-width: 80%;\n  color: #3f51b5;\n  text-shadow: 0 1px 1px #fff;\n  text-align: center;\n  font-size: 48px;\n`;\n\nexport const ErrorImage = styled.img`\n  width: 240px;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import errorImage from '../Image/error.jpg';\nimport {  ErrorBox, ErrorImage, Message } from './ErrorImageView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorImageView({ message }) {\n    return (\n        <ErrorBox role='alert'>\n            <ErrorImage src={errorImage} width='360' alt='laydownandcry' />\n            <Message>{message}</Message>\n        </ErrorBox>\n    );\n};\n\nErrorImageView.propTypes = {\n    message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 18px;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  color: #3f51b5;\n  font-weight: 700;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\nexport const ReviewContent = styled.p`\n  font-weight: 400;\n  margin-top: 5px;\n  margin-bottom: 5px;\n`;\n\nexport const NoReviewsMessage = styled.p`\n  font-weight: 700;\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMoviesReviews } from '../../services/getAPI';\nimport Loader from '../Loader/Loader';\nimport ErrorImageView from '../ErrorImageView/ErrorImageView';\nimport { ReviewsList, ReviewItem, ReviewsAuthor, ReviewContent, NoReviewsMessage } from './Reviews.styled';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [movieReviews, setMovieReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n          try {\n            setIsLoading(true);\n            setError(false);\n            const data = await getMoviesReviews(movieId);\n            setMovieReviews(data);\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        })();\n      }, [movieId]);\n\n    return (\n        <>\n        {isLoading && <Loader />}\n        {error && <ErrorImageView message=\"Oops, mistake... Please try again\" />}\n        \n        {movieReviews.length > 0 ? (\n        <ReviewsList>\n          {movieReviews.map(review => (\n            <ReviewItem key={review.id}>\n                <ReviewsAuthor>{review.author}</ReviewsAuthor>\n                <ReviewContent>{review.content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n        ) : (\n          <NoReviewsMessage>We don't have any reviews for this movie</NoReviewsMessage>\n        )}\n        </>\n    )    \n}\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `58645e23389326a2e8ed75695b9e1b79`,\n\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error(\"We don't have any reviews for this movie\");\n  }\n};\n\nexport const getGenresMovies = async () => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`);\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["ErrorBox","styled","Message","ErrorImage","ErrorImageView","message","role","src","errorImage","width","alt","ReviewsList","ReviewItem","ReviewsAuthor","ReviewContent","NoReviewsMessage","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","useEffect","getMoviesReviews","data","Loader","length","map","review","author","content","id","axios","api_key","getTrendingMovies","page","params","Error","getMoviesByQuery","query","include_adult","getMoviesDetailsById","getMoviesCast","cast","results","getGenresMovies","genres"],"sourceRoot":""}