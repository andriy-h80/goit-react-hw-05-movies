{"version":3,"file":"static/js/800.16b52f84.chunk.js","mappings":"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","sources":["components/ErrorImageView/ErrorImageView.styled.jsx","components/ErrorImageView/ErrorImageView.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/Genres/Genres.styled.jsx","components/Genres/Genres.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.jsx","components/Pages/MoviesPage/MoviesPage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/Pages/MoviesPage/MoviesPage.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","services/getAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  margin: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const Message = styled.p`\n  max-width: 80%;\n  color: #3f51b5;\n  text-shadow: 0 1px 1px #fff;\n  text-align: center;\n  font-size: 48px;\n`;\n\nexport const ErrorImage = styled.img`\n  width: 240px;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import errorImage from '../Image/error.jpg';\nimport {  ErrorBox, ErrorImage, Message } from './ErrorImageView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorImageView({ message }) {\n    return (\n        <ErrorBox role='alert'>\n            <ErrorImage src={errorImage} width='360' alt='laydownandcry' />\n            <Message>{message}</Message>\n        </ErrorBox>\n    );\n};\n\nErrorImageView.propTypes = {\n    message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const MovieListItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  \n  width: calc(25% - 10px);\n  margin-bottom: 20px;\n  padding: 3px;\n\n  width: 260px;\n  max-width: 100%;\n  max-height: 100%;\n\n  border: none;\n  transform: scale(1);\n  border-radius: 8px;\n\n  background-color: transparent;\n\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  backdrop-filter: blur(3.5px);\n  transition: box-shadow 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0px 2px 24px -5px rgba(0, 0, 0, 0.74);\n  }\n\n  img {\n    display: block;\n    height: 100%;\n    width: 100%;\n\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n    transition: transform 250ms linear;\n    transform: scale(1);\n\n    object-fit: cover;\n    object-position: center;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n`;\n\nexport const MoviePoster = styled.div`\n  overflow: hidden;\n  border-radius: 4px;\n`;\n\nexport const MovieTitle = styled.h2`\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 2px;\n  padding-right: 2px;\n  max-width: 100%;\n\n  overflow: hidden;\n\n  color: #3f51b5;\n  text-shadow: 0 0.4px 0.4px #000;\n  text-align: center;\n\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const ReleaseDate = styled.p`\n  position: absolute;\n  top: 5px;\n  left: 10px;\n\n  margin-top: 5px;\n  margin-bottom: 5px;\n  padding-left: 2px;\n  padding-right: 2px;\n\n  background-color: #eeea9e;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  color: #3f51b5;\n  text-shadow: 0 0.4px 0.4px #000;\n\n  border-radius: 8px;\n  font-size: 12px;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 25px;\n  right: 5px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 24px;\n  height: 16px;\n  padding-left: 2px;\n  padding-right: 2px;\n\n  color: #3f51b5;\n  background-color: #eeea9e;\n  text-shadow: 0 0.4px 0.4px #000;\n  border-radius: 8px;\n  font-size: 12px;\n  font-weight: 400;\n`;\n\nexport const GenresBlock = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const GenresBlock = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  list-style: none;\n`;\nexport const Genre = styled.li`\n  background: #eeea9e;\n  color: #3f51b5;\n  text-shadow: 0 0.4px 0.4px #fff;\n  font-size: 12px;\n  font-weight: bold;\n  border-radius: 5px;\n  padding: 0 6px;\n`;\n","import PropTypes from 'prop-types';\nimport { Genre, GenresBlock } from './Genres.styled';\n\nconst Genres = ({ data, genres }) => {\n  return (\n    <>\n      {genres && (\n        <GenresBlock>\n          {genres?.map(genre => {\n            if (data.includes(genre.id)) {\n              return <Genre key={genre.id}>{genre.name}</Genre>;\n            }\n            return null;\n          })}\n        </GenresBlock>\n      )}\n    </>\n  );\n};\n\nGenres.propTypes = {\n  data: PropTypes.array.isRequired,\n  genres: PropTypes.array,\n};\n\nexport default Genres;\n","import React from 'react';\nimport { Rating, GenresBlock, MovieListItem, MoviePoster, MovieTitle, ReleaseDate } from './MovieGalleryItem.styled';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NoPoster from '../Image/no-poster.webp';\nimport Genres from '../Genres/Genres';\n\nconst MovieGalleryItem = ({\n  movie: {\n    id,\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    genre_ids,\n  },\n  state,\n  genres,\n}) => {\n  return (\n    <MovieListItem>\n      <Link to={`/movies/${id}`} state={state}>\n        <MoviePoster>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : NoPoster\n            }\n            alt={original_title}\n            width=\"200\"\n          />\n        </MoviePoster>\n        <MovieTitle>{title}</MovieTitle>\n        {release_date && <ReleaseDate>{parseInt(release_date)}</ReleaseDate>}\n        {vote_average !== 0 && <Rating>{parseFloat(vote_average)?.toFixed(1)}</Rating>}\n      </Link>\n      <GenresBlock>\n        <Genres data={genre_ids?.slice(0, 1)} genres={genres} />\n      </GenresBlock>\n    </MovieListItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  state: PropTypes.objectOf(PropTypes.object).isRequired,\n  genres: PropTypes.array.isRequired,\n};\n\nexport default MovieGalleryItem;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListStyled } from './MovieGallery.styled';\nimport MovieGalleryItem from '../MovieGalleryItem/MovieGalleryItem';\n\nconst MovieGallery = ({ movies, genres }) => {\n  const location = useLocation();\n  if (!movies) {\n    return null;\n  }\n  return (\n    <MovieListStyled>\n      {movies.map(movie => (\n        <MovieGalleryItem\n          key={movie.id}\n          movie={movie}\n          genres={genres}\n          state={{ from: location }}\n        />\n      ))}\n    </MovieListStyled>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  )\n};\n\nexport default MovieGallery;\n","import styled from 'styled-components';\n\nexport const MoviesBlock = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  padding-bottom: 5px;\n  padding-left: 4px;\n  padding-right: 4px;\n  margin-bottom: 64px;\n  font-size: 14px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    margin: 0 auto;  \n    padding: 15px;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    background-color: #eeea9e;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n        :hover {\n        opacity: 1;\n        }\n`;\n\nexport const SearchFormLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 24px;\n    border: none;\n    border-radius: 4px;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n        \n        ::placeholder {\n            font: inherit;\n            font-size: 18px;\n        }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, SearchFormBtn, SearchFormLabel, SearchFormInput } from './Searchbar.styled';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n  \nconst Searchbar = ({ onSubmit }) => {\n    const [value, setValue] = useState('');\n       \n    const handleChange = event => {\n        setValue(event.currentTarget.value);\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n    \n        if (value.trim() === '') {\n             toast('What are you searching for?');\n            return;\n        };\n        onSubmit(value);\n    }  \n\n    return (\n        <SearchForm onSubmit={handleSubmit}>\n                <SearchFormInput\n                    className='input'\n                    type='search'\n                    autoComplete='off'\n                    autoFocus\n                    placeholder=\"Let's find your favorite movie\"\n                    value={value}\n                    onChange={handleChange}\n                />\n                <SearchFormBtn type='submit'>\n                    <ImSearch size={20}/>\n                    <SearchFormLabel>Search</SearchFormLabel>\n                </SearchFormBtn>\n            </SearchForm>\n    );\n  };\n  \nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState, useEffect } from \"react\";\nimport {  useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMoviesByQuery, getGenresMovies } from '../../../services/getAPI';\nimport { MoviesBlock } from './MoviesPage.styled';\nimport Searchbar from '../../Searchbar/Searchbar';\nimport Loader from '../../Loader/Loader';\nimport ErrorImageView from '../../ErrorImageView/ErrorImageView';\nimport { Title } from '../../Title/Title';\nimport MovieGallery from '../../MovieGallery/MovieGallery';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [genres, setGenres] = useState([]);\n    const [searchName, setSearchName] = useState([]);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    // get movies by query\n    useEffect(() => {\n\n        const movieSearchName = searchParams.get('query');\n\n        if (!movieSearchName) {\n          setMovies([]);\n          return;\n        }\n\n        (async () => {\n          try {\n            setIsLoading(true);\n            setError(null);\n\n            const data = await getMoviesByQuery(movieSearchName);\n            if (data.results.length === 0){\n              setError(\"No movies found\");\n            } else {\n              setMovies(data.results);\n            }\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n\n          setSearchName(movieSearchName)\n        })();\n      }, [searchParams]);\n    \n    // get genres\n    useEffect(() => {\n        (async function getGenres() {\n        try {\n            setIsLoading(true);\n            setError(null);\n\n            const genresData = await getGenresMovies();\n            setGenres(genresData);\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n        })();\n    }, []);\n\n    const handleSearchChange = value => {\n        if (value === searchParams.get('query')) {\n          return toast(\n            'You have already searched for this keyword. Please try another one.'\n          );\n        }\n        setSearchParams({ query: value });\n      };\n\n    return (\n        <MoviesBlock>\n        <Searchbar onSubmit={handleSearchChange} />\n        {isLoading && <Loader />}\n        {error  === \"No movies found\" && (<ErrorImageView message={`Sorry, we can't find ${searchName}`} />)}    \n        {!error && movies && movies.length > 0 && (\n            <>\n            <Title title='We have the following movies:' />\n             \n            <MovieGallery movies={movies} genres={genres} />\n            </>\n        )}\n        </MoviesBlock>\n    )\n}\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 30px;\n  color: #3f51b5;\n  text-shadow:  0 0.4px 0.4px #000;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `58645e23389326a2e8ed75695b9e1b79`,\n\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error(\"We don't have any reviews for this movie\");\n  }\n};\n\nexport const getGenresMovies = async () => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`);\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["ErrorBox","styled","Message","ErrorImage","ErrorImageView","message","role","src","errorImage","width","alt","MovieListStyled","MovieListItem","MoviePoster","MovieTitle","ReleaseDate","Rating","GenresBlock","Genre","data","genres","map","genre","includes","id","name","movie","poster_path","title","original_title","release_date","vote_average","genre_ids","state","to","NoPoster","parseInt","parseFloat","toFixed","slice","movies","location","useLocation","from","MoviesBlock","SearchForm","SearchFormBtn","SearchFormLabel","SearchFormInput","onSubmit","useState","value","setValue","event","preventDefault","trim","toast","className","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","size","setMovies","isLoading","setIsLoading","error","setError","setGenres","searchName","setSearchName","useSearchParams","searchParams","setSearchParams","useEffect","movieSearchName","get","getMoviesByQuery","results","length","getGenresMovies","genresData","query","Loader","Title","MovieGallery","MainTitle","axios","api_key","getTrendingMovies","page","params","Error","include_adult","getMoviesDetailsById","movieId","getMoviesCast","cast","getMoviesReviews"],"sourceRoot":""}