{"version":3,"file":"static/js/44.f15943f9.chunk.js","mappings":"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","sources":["components/ErrorImageView/ErrorImageView.styled.jsx","components/ErrorImageView/ErrorImageView.jsx","components/Pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/Pages/MovieDetailsPage/MovieDetailsPage.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","services/getAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  margin: 5px;\n  margin-bottom: 10px;\n  gap: 10px;\n`;\n\nexport const Message = styled.p`\n  max-width: 80%;\n  color: #3f51b5;\n  text-shadow: 0 1px 1px #fff;\n  text-align: center;\n  font-size: 48px;\n`;\n\nexport const ErrorImage = styled.img`\n  width: 240px;\n  height: auto;\n  object-fit: contain;\n  object-position: center;\n`;\n","import errorImage from '../Image/error.jpg';\nimport {  ErrorBox, ErrorImage, Message } from './ErrorImageView.styled';\nimport PropTypes from 'prop-types';\n\nexport default function ErrorImageView({ message }) {\n    return (\n        <ErrorBox role='alert'>\n            <ErrorImage src={errorImage} width='360' alt='laydownandcry' />\n            <Message>{message}</Message>\n        </ErrorBox>\n    );\n};\n\nErrorImageView.propTypes = {\n    message: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #eeea9e;\n  color: #3f51b5;\n  border: 1px solid #3f51b5;\n  border-radius: 8px;\n  text-decoration: none;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #3f51b5;\n    color: #eeea9e;\n    border-color: #eeea9e;\n  }\n`;\n\nexport const BaseInfo = styled.div`\n   display: flex;\n   padding: 15px;\n   gap: 40px;\n   border-bottom: 2px solid #3f51b5;\n`;\n\nexport const PosterImg = styled.img`\n   max-width: 500px;\n`;\n\nexport const MainTitle = styled.h2`\n   margin-bottom: 4px;\n   text-align: left;\n   color: #3f51b5;\n   font-size: 18px;\n   font-weight: 700;\n   letter-spacing: 1.5px;\n`;\n\nexport const Genres = styled.ul`\n   display: flex;\n   flex-wrap: wrap;\n   align-items: center;\n   justify-content: left;\n   padding-left: 0;\n   gap: 16px;\n`;\n\nexport const Genre = styled.li`\n   background: #eeea9e;\n   color: #3f51b5;\n   text-shadow: 0 0.4px 0.4px #fff;\n   font-size: 12px;\n   font-weight: bold;\n   border-radius: 5px;\n   padding: 6px;\n   list-style: none;\n`;\n\nexport const AdditionalInfo = styled.div`\n   border-bottom: 2px solid #3f51b5;\n`;\n\nexport const Text = styled.h3`\n   text-align: left;\n   margin: 20px;\n   font-weight: 500;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  list-style: none;\n  margin: 10px;\n  padding: 10px;\n`;\n\nexport const InfoLink = styled(Link)`\n  padding: 5px;\n  border-radius: 8px;\n  text-decoration: none;\n  color: #3f51b5;\n  background-color: #eeea9e;\n  font-weight: 700;\n  border: 1px solid #3f51b5;\n  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  \n  &.active {\n    color: #eeea9e;\n    background-color: #3f51b5;\n  }\n\n  :hover,\n  :focus {\n    color: #eeea9e;\n    background-color: #3f51b5;\n  }\n`;\n\n","import { Suspense } from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { getMoviesDetailsById } from '../../../services/getAPI';\nimport Loader from '../../Loader/Loader';\nimport ErrorImageView from '../../ErrorImageView/ErrorImageView';\nimport { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Title } from '../../Title/Title';\nimport NoPoster from '../../Image/no-poster.webp';\nimport { StyledLink, BaseInfo, PosterImg, AdditionalInfo, Text, MainTitle, Genres, Genre, InfoList, InfoLink } from './MovieDetailsPage.styled';\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n    const { movieId } = useParams();\n\n    // get movies by query\n    useEffect(() => {\n\n        (async () => {\n          try {\n            setIsLoading(true);\n            setError(null);\n\n            const data = await getMoviesDetailsById(movieId);\n            setMovieDetails(data);\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        })();\n      }, [movieId]);\n    \n      const {\n        poster_path,\n        original_title,\n        title,\n        release_date,\n        vote_average,\n        genres,\n        overview,\n      } = movieDetails;\n\n    return (\n    <>\n        {isLoading && <Loader />}\n        {error && <ErrorImageView message=\"Oops, mistake... Please try again\" />}    \n               \n        <Title title='Movie Details' />\n        <StyledLink to={backLinkLocationRef.current}>Go back</StyledLink>\n        <BaseInfo>\n            <PosterImg\n                src={\n                    poster_path\n                    ? `https://image.tmdb.org/t/p/original${poster_path}`\n                    : NoPoster\n                    }\n                    alt={title ?? original_title}\n                    width=\"500\"\n            />\n            <div>\n            <MainTitle>\n                {title ?? original_title}\n                {release_date && <span> ({parseInt(release_date)})</span>}\n            </MainTitle>\n                <p>User score: {Math.round(vote_average * 10)}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                {genres && (\n                <Genres>\n                  {genres.map((genre, index) => (\n                    <Genre key={index}>{genre.name}</Genre>\n                  ))}\n                </Genres>\n              )}\n            </div>\n        </BaseInfo>\n\n        <AdditionalInfo>   \n        <Text>Additional information</Text>           \n        <InfoList>\n            <li>\n                <InfoLink to='cast'>Cast</InfoLink>\n            </li>\n            <li>\n                <InfoLink to='reviews'>Reviews</InfoLink>\n            </li>\n        </InfoList>\n        </AdditionalInfo>  \n        <Suspense fallback={<Loader />}>\n            <Outlet />\n        </Suspense>  \n    </>\n    )\n}\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 30px;\n  color: #3f51b5;\n  text-shadow:  0 0.4px 0.4px #000;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport { MainTitle } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n  return <MainTitle>{title}</MainTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `58645e23389326a2e8ed75695b9e1b79`,\n\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movies\");\n  }\n};\n\nexport const getMoviesByQuery = async (query, page = 1) => {\n  try {\n    const { data } = await axios.get('/search/movie', {\n      params: {\n        query,\n        page,\n        include_adult: false,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error(\"Oops, there is no movie with that name\");\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    throw new Error(\"Oops, there is no cast movie\");\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    throw new Error(\"We don't have any reviews for this movie\");\n  }\n};\n\nexport const getGenresMovies = async () => {\n  try {\n    const { data } = await axios.get(`genre/movie/list`);\n    return data.genres;\n  } catch (error) {\n    throw new Error('Oops, there is no movie');\n  }\n};\n"],"names":["ErrorBox","styled","Message","ErrorImage","ErrorImageView","message","role","src","errorImage","width","alt","StyledLink","Link","BaseInfo","PosterImg","MainTitle","Genres","Genre","AdditionalInfo","Text","InfoList","InfoLink","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","getMoviesDetailsById","data","poster_path","original_title","title","release_date","vote_average","genres","overview","Loader","Title","to","current","NoPoster","parseInt","Math","round","map","genre","index","name","Suspense","fallback","axios","api_key","getTrendingMovies","page","params","Error","getMoviesByQuery","query","include_adult","id","getMoviesCast","cast","getMoviesReviews","results","getGenresMovies"],"sourceRoot":""}